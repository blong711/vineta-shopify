{%- comment -%}Search Drawer Section{%- endcomment -%}
<div class="modal fade popup-search" id="search" aria-modal="true" role="dialog">
  <div class="modal-dialog modal-fullscreen">
    <div class="modal-content">
      <div class="header">
        <button class="icon-close icon-close-popup" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="container">
        <div class="row justify-content-center">
          <div class="col-lg-8">
            <div class="looking-for-wrap">
              <div class="heading">{{ section.settings.title }}</div>
              <form action="{{ routes.search_url }}" method="get" class="form-search">
                <fieldset class="text">
                  <input type="search" name="q" placeholder="Search" class="search-input" tabindex="0" value="{{ search.terms | escape }}" aria-required="true" required>
                </fieldset>
                <button type="submit">
                  <i class="icon icon-search"></i>
                </button>
              </form>
              <div class="search-suggestions-grid mt-4" style="display: none;">
                <div class="wrapper-shop tf-grid-layout tf-col-4" id="search-suggestions-container">
                  <!-- Search suggestions will be loaded here -->
                </div>
              </div>
              <div class="popular-searches justify-content-md-center">
                {% if settings.show_popular_searches %}
                  <div class="text fw-medium">Popular searches:</div>
                  <ul>
                    <li><a class="link" href="{{ routes.collections_url }}?sort_by=best-selling">Featured</a></li>
                    <li><a class="link" href="{{ routes.collections_url }}?sort_by=created-descending">Trendy</a></li>
                    <li><a class="link" href="{{ routes.collections_url }}?sort_by=created-descending">New</a></li>
                    <li><a class="link" href="{{ routes.collections_url }}?sort_by=price-descending&filter.v.option.price=on_sale">Sale</a></li>
                  </ul>
                {% endif %}
              </div>
            </div>
          </div>
          <div class="col-lg-12">
            {% if settings.show_search_suggestions %}
              <div class="featured-product">
                <div class="text-xl-2 fw-medium featured-product-heading">Featured product</div>
                <div dir="ltr" class="swiper tf-swiper wrap-sw-over" data-swiper='{
                  "slidesPerView": 2,
                  "spaceBetween": 12,
                  "speed": 800,
                  "observer": true,
                  "observeParents": true,
                  "slidesPerGroup": 2,
                  "pagination": { "el": ".sw-pagination-search", "clickable": true },
                  "breakpoints": {
                    "768": { "slidesPerView": 3, "spaceBetween": 12, "slidesPerGroup": 3 },
                    "1200": { "slidesPerView": 4, "spaceBetween": 24, "slidesPerGroup": 4}
                  }
                }'>
                  <div class="swiper-wrapper">
                    {%- for product in section.settings.suggested_products limit: 4 -%}
                      <div class="swiper-slide">
                        {% render 'card-product', product: product %}
                      </div>
                    {%- endfor -%}
                  </div>
                  <div class="d-flex d-xl-none sw-dot-default sw-pagination-search justify-content-center"></div>
                </div>
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "Search Drawer",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "What are you looking for?"
    },
    {
      "type": "product_list",
      "id": "suggested_products",
      "label": "Products suggest",
      "limit": 4
    }
  ]
}
{% endschema %}

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.querySelector('.search-input');
    const suggestionsContainer = document.querySelector('.search-suggestions-grid');
    const suggestionsWrapper = document.getElementById('search-suggestions-container');
    let searchTimeout;

    // Format money helper function
    const formatMoney = (cents) => {
      return (cents / 100).toLocaleString('en-US', {
        style: 'currency',
        currency: 'USD'
      });
    };

    searchInput.addEventListener('input', function(e) {
      const query = e.target.value.trim();
      
      // Clear previous timeout
      clearTimeout(searchTimeout);
      
      // Hide suggestions if query is empty
      if (!query) {
        suggestionsContainer.style.display = 'none';
        return;
      }

      // Set new timeout for search
      searchTimeout = setTimeout(() => {
        fetch(`/search/suggest.json?q=${encodeURIComponent(query)}&resources[type]=product&resources[limit]=8`)
          .then(response => response.json())
          .then(data => {
            if (data.resources.results.products.length > 0) {
              suggestionsWrapper.innerHTML = data.resources.results.products.map(product => `
                <div class="loadItem card-product grid style-1">
                  <div class="card-product-wrapper asp-ratio-0">
                    <a href="${product.url}" class="product-img">
                      <img src="${product.featured_image.url}" alt="${product.title}" width="300" height="300">
                    </a>
                  </div>
                  <div class="card-product-info">
                    <a class="name-product link fw-medium text-md" href="${product.url}">${product.title}</a>
                    <p class="price-wrap fw-medium">
                      ${product.compare_at_price > product.price ? 
                        `<span class="price-new text-primary">${formatMoney(product.price)}</span>
                         <span class="price-old text-dark">${formatMoney(product.compare_at_price)}</span>` :
                        `<span class="price-new">${formatMoney(product.price)}</span>`
                      }
                    </p>
                  </div>
                </div>
              `).join('');
              suggestionsContainer.style.display = 'block';
            } else {
              suggestionsContainer.style.display = 'none';
            }
          })
          .catch(error => {
            console.error('Error fetching search suggestions:', error);
            suggestionsContainer.style.display = 'none';
          });
      }, 300); // 300ms delay to prevent too many requests
    });

    // Hide suggestions when clicking outside
    document.addEventListener('click', function(e) {
      if (!e.target.closest('.search-suggestions-grid') && !e.target.closest('.search-input')) {
        suggestionsContainer.style.display = 'none';
      }
    });
  });
</script>

{% if request.design_mode %}
<script>
  document.addEventListener('shopify:section:select', function(event) {
    if (event.target.id === 'shopify-section-search-drawer') {
      const searchModal = new bootstrap.Modal(document.getElementById('search'));
      searchModal.show();
    }
  });
</script>
{% endif %}

<style>
.search-input::-webkit-search-clear-button {
  display: none !important;
  -webkit-appearance: none;
}
.search-input::-webkit-search-cancel-button {
  display: none !important;
  -webkit-appearance: none;
}
.search-input[type="search"]::-ms-clear {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
}
.search-input[type="search"]::-ms-reveal {
  display: none !important;
  width: 0 !important;
  height: 0 !important;
}
</style>