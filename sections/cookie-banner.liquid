{% schema %}
{
  "name": "Cookie Banner",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_cookie_banner",
      "label": "Enable Cookie Banner",
      "default": true
    },
    {
      "type": "url",
      "id": "privacy_link",
      "label": "Privacy Policy Link"
    },
    {
      "type": "select",
      "id": "expiry_days",
      "label": "Cookie Expiry (Days)",
      "options": [
        {
          "value": "1",
          "label": "1 day"
        },
        {
          "value": "7",
          "label": "7 days"
        },
        {
          "value": "30",
          "label": "30 days"
        },
        {
          "value": "365",
          "label": "1 year"
        }
      ],
      "default": "30"
    }
  ],
  "presets": [
    {
      "name": "Cookie Banner",
      "category": "Popup"
    }
  ]
}
{% endschema %}

{% if section.settings.enable_cookie_banner %}
  <div class="cookie-banner sys-cookies" id="cookie-banner" style="display: none;" 
       data-configs='{"day_next": "{{ section.settings.expiry_days }}", "show": "1"}'>
    <div class="overplay"></div>
    <div class="content" id="drawerCookies">
      <p class="text-md">{{ 'cookie.message' | t }}</p>
      <div class="button-group">
        {% if section.settings.privacy_link %}
          <a class="btn-out-line-white btn-submit-total tf-btn" href="{{ section.settings.privacy_link }}">
            {{ 'cookie.privacy_button' | t }}
          </a>
        {% endif %}
        <button id="accept-cookie" class="accept-button btn-out-line-white btn-submit-total tf-btn hdt-pp_cookies__accept-btn">
          {{ 'cookie.accept_button' | t }}
        </button>
        <button class="btn-out-line-white btn-submit-total tf-btn hdt-pp_cookies__decline-btn">
          {{ 'cookie.decline_button' | t }}
        </button>
      </div>
    </div>
  </div>
{% endif %}

{% javascript %}
// Global cookie functions
function getCookie(name) {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
}

function setCookie(name, value, days) {
  const date = new Date();
  date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
  const expires = `expires=${date.toUTCString()}`;
  document.cookie = `${name}=${value};${expires};path=/;SameSite=Lax`;
}

class cookiesBar extends HTMLElement {
  constructor() {
    super();
    this.cookies = JSON.parse(this.getAttribute("configs"));
    this.cookies.cookiesName = "theme4:cookies";
    this.cookies.drawer = this.querySelector("#drawerCookies");
    this.isShowCookiesAll = (this.cookies.show == '1');
    this.acceptBtn = this.cookies.drawer.querySelector(".hdt-pp_cookies__accept-btn");
    this.declineBtn = this.cookies.drawer.querySelector(".hdt-pp_cookies__decline-btn");
    this.loadCookieBanner(this);
    let self = this;
    this.acceptBtn?.addEventListener("click", this.handleAccept.bind(this));
    this.declineBtn?.addEventListener("click", this.handleDecline.bind(this));
    if (Shopify.designMode) {
      document.addEventListener('shopify:section:select', (event) => {
        const cookiesSelect = event.target.classList.contains('sys-cookies');
        if (!cookiesSelect) return;
        self.showCookiesBanner();
      })
      document.addEventListener('shopify:section:deselect', (event) => {
        const cookiesSelect = event.target.classList.contains('sys-cookies');
        if (!cookiesSelect) return;
        self.hideCookiesBanner();
      })
    }
  }
  
  handleAccept() {
    if (this.isShowCookiesAll) {
      setCookie(this.cookies.cookiesName, 'accepted', parseInt(this.cookies.day_next));
    }
    window.Shopify.customerPrivacy.setTrackingConsent(true, this.hideCookiesBanner.bind(this));
  }

  handleDecline() {
    if (this.isShowCookiesAll) {
      setCookie(this.cookies.cookiesName, 'accepted', parseInt(this.cookies.day_next));
    }
    window.Shopify.customerPrivacy.setTrackingConsent(false, this.hideCookiesBanner.bind(this));
  }

  showCookiesBanner() {
    this.style.display = 'block';
    document.querySelector("html").classList.remove("no-scroll");
  }

  hideCookiesBanner() {
    this.style.display = 'none';
  }

  initCookieBanner() {
    // Don't show banner in theme customizer
    if (Shopify.designMode) {
      return;
    }
    
    const userCanBeTracked = window.Shopify.customerPrivacy.userCanBeTracked();
    const userTrackingConsent = window.Shopify.customerPrivacy.getTrackingConsent();

    if ((!userCanBeTracked && userTrackingConsent === 'no_interaction') || this.isShowCookiesAll) {
      this.showCookiesBanner();
    }
  }

  loadCookieBanner() {
    let self = this;
    if (!this.cookies.drawer) return;
    this.cookies.day_next = this.cookies.day_next || 60;
    this.isShowCookiesAll = (this.cookies.show == '1');
    if (getCookie(this.cookies.cookiesName) == 'accepted' || this.style.display === 'block') return;
    if (window.Shopify.customerPrivacy) {
      self.initCookieBanner();
    } else {
      window.Shopify.loadFeatures([
        {
          name: 'consent-tracking-api',
          version: '0.1',
        }
      ],
      function (error) {
        if (error) {
          throw error;
        }
        self.initCookieBanner();
      });
    }
  }
}

customElements.define('sys-cookies', cookiesBar);
{% endjavascript %}