<!-- sections/main-login.liquid -->

<div class="login-section section-spacing flat-spacing-13" color-scheme="{{ section.settings.color_scheme }}">
  <div class="container">
    <div class="login-grid grid-2-cols">
      {%- for block in section.blocks -%}
        {%- case block.type -%}
          {%- when 'form' -%}
            <div class="login-form">
              <div id="login-form-block">
                <h2 class="form-heading">Log in</h2>
                <div id="login">
                  {%- form 'customer_login', novalidate: 'novalidate' -%}
                    {%- if form.errors -%}
                      <div class="form-message error">
                        <ul class="error-list">
                          {%- for field in form.errors -%}
                            <li>
                              {%- if field == 'form' -%}
                                {{ form.errors.messages[field] }}
                              {%- else -%}
                                <a href="#{{ field }}">
                                  {{ form.errors.translated_fields[field] | capitalize }}
                                  {{ form.errors.messages[field] }}
                                </a>
                              {%- endif -%}
                            </li>
                          {%- endfor -%}
                        </ul>
                      </div>
                    {%- endif -%}
                    <div class="form-field">
                      <input class="form-input" type="email" name="customer[email]" id="CustomerEmail-{{ section.id }}" autocomplete="email" autocorrect="off" autocapitalize="off" {% if form.errors contains 'form' %} aria-invalid="true" {% endif %} placeholder="Email *">
                    </div>
                    <div class="form-field">
                      <input class="form-input" type="password" value="" name="customer[password]" id="CustomerPassword-{{ section.id }}" autocomplete="current-password" placeholder="Password *">
                    </div>
                    <a href="#" class="forgot-link" id="show-reset-form">Forgot your password?</a>
                    <button class="btn btn-primary" type="submit">Log in</button>
                  {%- endform -%}
                </div>
              </div>
              <div id="reset-form-block" style="display:none;">
                <h2 class="form-heading">Reset your password</h2>
                <p class="form-description">We will send you an email to reset your password.</p>
                {%- form 'recover_customer_password' -%}
                  {%- if form.errors -%}
                    <div class="form-message error">
                      <ul class="error-list">
                        {%- for field in form.errors -%}
                          <li>
                            {%- if field == 'form' -%}
                              {{ form.errors.messages[field] }}
                            {%- else -%}
                              <a href="#{{ field }}">
                                {{ form.errors.translated_fields[field] | capitalize }}
                                {{ form.errors.messages[field] }}
                              </a>
                            {%- endif -%}
                          </li>
                        {%- endfor -%}
                      </ul>
                    </div>
                  {%- endif -%}
                  {%- if form.posted_successfully? -%}
                    <div class="form-message success">
                      <svg class="success-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/>
                      </svg>
                      <span>We've sent you an email with a link to update your password.</span>
                    </div>
                  {%- endif -%}
                  <div class="form-field">
                    <input class="form-input" type="email" name="email" id="RecoverEmail-{{ section.id }}" autocomplete="email" autocorrect="off" autocapitalize="off" placeholder="Email *" required>
                  </div>
                  <div class="form-field">
                    <a href="#" class="forgot-link" id="back-to-login">Back to login</a>
                  </div>
                  <div class="form-field">
                    <button class="btn btn-primary" type="submit">Submit</button>
                  </div>
                {%- endform -%}
              </div>
            </div>
          {%- else -%}
            <div class="login-content">
              {%- if block.settings.title != blank -%}<h2 class="form-heading">{{ block.settings.title }}</h2>{%- endif -%} 
              {%- if block.settings.description != blank -%}<p class="form-description">{{ block.settings.description }}</p>{%- endif -%} 
              <a href="{{ routes.account_register_url }}" class="register-link">
                Register
                <svg class="hdt-icon hdt-icon-2 hdt-inline-block" xmlns="http://www.w3.org/2000/svg" width="8" height="8" viewBox="0 0 8 8" fill="currentColor"><path d="M0.861539 8L0 7.13846L5.90769 1.23077H0.615385V0H8V7.38462H6.76923V2.09231L0.861539 8Z"></path></svg>
              </a>
            </div>
        {%- endcase -%}
      {%- endfor -%}
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  var showReset = document.getElementById('show-reset-form');
  var backToLogin = document.getElementById('back-to-login');
  var loginBlock = document.getElementById('login-form-block');
  var resetBlock = document.getElementById('reset-form-block');
  
  if (showReset && backToLogin && loginBlock && resetBlock) {
    showReset.addEventListener('click', function(e) {
      e.preventDefault();
      loginBlock.style.display = 'none';
      resetBlock.style.display = 'block';
    });
    
    backToLogin.addEventListener('click', function(e) {
      e.preventDefault();
      resetBlock.style.display = 'none';
      loginBlock.style.display = 'block';
    });
  }

  // Handle reset password form submission via AJAX
  var resetForm = document.querySelector('#reset-form-block form');
  if (resetForm) {
    resetForm.addEventListener('submit', function(e) {
      e.preventDefault();
      
      var formData = new FormData(this);
      var submitButton = this.querySelector('button[type="submit"]');
      var originalButtonText = submitButton.textContent;
      
      // Disable submit button and show loading state
      submitButton.disabled = true;
      submitButton.textContent = 'Sending...';
      
      // Remove any existing messages
      var existingMessages = resetBlock.querySelectorAll('.form-message');
      existingMessages.forEach(function(msg) {
        msg.remove();
      });
      
      fetch(window.location.href, {
        method: 'POST',
        body: formData,
        headers: {
          'X-Requested-With': 'XMLHttpRequest'
        }
      })
      .then(function(response) {
        return response.text();
      })
      .then(function(html) {
        // Create a temporary div to parse the response
        var tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;
        
        // Check if there are any error messages in the response
        var errorMessages = tempDiv.querySelectorAll('.form-message.error');
        var successMessages = tempDiv.querySelectorAll('.form-message.success');
        
        if (errorMessages.length > 0) {
          // Show error message
          var errorContainer = document.createElement('div');
          errorContainer.className = 'form-message error';
          errorContainer.innerHTML = errorMessages[0].innerHTML;
          resetForm.insertBefore(errorContainer, resetForm.firstChild);
        } else if (successMessages.length > 0) {
          // Show success message
          var successContainer = document.createElement('div');
          successContainer.className = 'form-message success';
          successContainer.innerHTML = successMessages[0].innerHTML;
          resetForm.insertBefore(successContainer, resetForm.firstChild);
          
          // Clear the form
          resetForm.reset();
        } else {
          // Generic success message if no specific message found
          var genericSuccess = document.createElement('div');
          genericSuccess.className = 'form-message success';
          genericSuccess.innerHTML = '<svg class="success-icon" xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd"/></svg><span>We\'ve sent you an email with a link to update your password.</span>';
          resetForm.insertBefore(genericSuccess, resetForm.firstChild);
          
          // Clear the form
          resetForm.reset();
        }
      })
      .catch(function(error) {
        // Show error message for network issues
        var errorContainer = document.createElement('div');
        errorContainer.className = 'form-message error';
        errorContainer.innerHTML = '<ul class="error-list"><li>An error occurred. Please try again.</li></ul>';
        resetForm.insertBefore(errorContainer, resetForm.firstChild);
      })
      .finally(function() {
        // Re-enable submit button
        submitButton.disabled = false;
        submitButton.textContent = originalButtonText;
      });
    });
  }
});
</script>

{%- style -%}
#shopify-section-{{section.id}} {
  --section-pt: {{section.settings.padding_top}}px;
  --section-pb: {{section.settings.padding_bottom}}px;
  --section-prate: {{section.settings.padding_rate}};
}

.login-header {
  text-align: center;
  margin-top: 3rem;
  margin-bottom: 3rem;
}

.main-login-heading {
  font-size: 2.5rem;
  font-weight: 400;
  margin: 0;
}

.login-section {
  background: var(--gradient-background);
}

.login-grid {
  display: grid;
  gap: 12rem;
  align-items: flex-start;
  justify-content: center;
}

@media screen and (min-width: 770px) {
  .grid-2-cols {
    grid-template-columns: 1fr 1fr;
  }
}

.login-form {
  max-width: 100%;
}

.form-heading {
  font-size: 2rem;
  margin-bottom: 2rem;
  font-weight: 400;
}

@media screen and (max-width: 1024px) and (min-width: 750px) {
  .form-heading {
    font-size: 1.5rem !important;
  }
  .login-grid {
  gap: 5rem;
}
}
@media screen and (max-width: 750px) {
  .form-heading {
    font-size: 24px !important;
  }
}

.form-description {
  margin-bottom: 2rem;
  color: rgba(var(--color-foreground), 0.75);
  font-size: 1rem;
}

.form-field {
  margin-bottom: 1rem;
}

.form-input {
  width: 100%;
  padding: 1rem;
  border: 1px solid #e5e5e5;
  border-radius: 4px;
  background: #fff;
  font-size: 1rem;
  transition: border-color 0.2s ease;
}

.form-input:focus {
  outline: none;
  border-color: #000;
}

.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: 1rem 2rem;
  border-radius: 4px;
  font-weight: 600;
  text-decoration: none;
  transition: all 0.2s ease;
  cursor: pointer;
  width: 100%;
  font-size: 1rem;
}

.btn-primary {
  background: #000;
  color: #fff;
  border: none;
}

.btn-primary:hover {
  background: #222;
}

.forgot-link {
  color: #222;
  text-decoration: underline;
  text-underline-offset: 0.3em;
  font-size: 1rem;
  margin-bottom: 1.5rem;
  margin-top: 0.5rem;
}

.forgot-link:hover {
  color: #000;
}

.form-message {
  display: flex;
  align-items: center;
  padding: 1rem;
  border-radius: 4px;
  margin-bottom: 1.5rem;
}

.form-message.error {
  background: #ffeaea;
  color: #d32f2f;
}

.form-message.success {
  background: #eaffea;
  color: #388e3c;
}

.error-icon,
.success-icon {
  width: 1.25rem;
  height: 1.25rem;
  margin-right: 0.5rem;
}

.error-list {
  list-style: none;
  padding: 0;
  margin: 0.5rem 0 0;
}

.error-list li {
  margin-bottom: 0.25rem;
}

.error-list a {
  color: #222;
  text-decoration: underline;
  text-underline-offset: 0.3em;
}

.login-content {
  display: flex;
  flex-direction: column;
  justify-content: flex-start;
  align-items: flex-start;
}

.register-link {
    color: #222;
    text-decoration: underline;
    text-underline-offset: 0.3em;
    font-size: 1rem;
}

.register-link:hover {
  color: #222;
  border-color: #222;
}

@media screen and (max-width: 749px) {
  .login-header {
    margin-top: 2rem;
    margin-bottom: 2rem;
  }
  .container {
    max-width: 100%;
  }
  .login-grid {
    grid-template-columns: 1fr;
    gap: 3.5rem;
  }
  .login-content {
    align-items: center;
    text-align: center;
    padding-top: 0;
  }
  .form-heading {
    text-align: center;
  }
}
{%- endstyle -%}

{% schema %}
{
  "name": "Login",
  "class": "section",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "Color scheme"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 20,
      "max": 120,
      "step": 1,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 20,
      "max": 120,
      "step": 1,
      "unit": "px",
      "label": "Padding bottom",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_rate",
      "min": 0,
      "max": 100,
      "step": 1,
      "unit": "%",
      "label": "Padding rate",
      "default": 75
    }
  ],
  "blocks": [
    {
      "type": "form",
      "name": "Form",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "btn_full",
          "label": "Full width button"
        },
        {
          "type": "select",
          "id": "btn_style",
          "label": "Button style",
          "options": [
            {
              "value": "primary",
              "label": "Primary"
            },
            {
              "value": "secondary",
              "label": "Secondary"
            },
            {
              "value": "outline",
              "label": "Outline"
            },
            {
              "value": "text",
              "label": "Text"
            }
          ],
          "default": "primary"
        }
      ]
    },
    {
      "type": "infos",
      "name": "Infos",
      "limit": 1,
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title",
          "default": "I'm new here"
        },
        {
          "type": "textarea",
          "id": "description",
          "label": "Description",
          "default": "Sign up for early Sale access plus tailored new arrivals, trends and promotions. To opt out, click unsubscribe in our emails."
        },
        {
          "type": "checkbox",
          "id": "btn_full",
          "label": "Full width button"
        },
        {
          "type": "select",
          "id": "btn_style",
          "label": "Button style",
          "options": [
            {
              "value": "primary",
              "label": "Primary"
            },
            {
              "value": "secondary",
              "label": "Secondary"
            },
            {
              "value": "outline",
              "label": "Outline"
            },
            {
              "value": "text",
              "label": "Text"
            }
          ],
          "default": "primary"
        }
      ]
    }
  ]
}
{% endschema %}
