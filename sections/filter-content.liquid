{%- comment -%}
  Filter Content Snippet
  Contains the common filter elements used by all filter layouts
{%- endcomment -%}

{%- comment -%} Configuration Options {%- endcomment -%}
{%- assign show_collections = section.settings.show_collections | default: true -%}
{%- assign show_on_sale = section.settings.show_on_sale | default: true -%}
{%- assign show_banner = section.settings.show_banner | default: true -%}
{%- assign banner_title = section.settings.banner_title | default: 'Elevate Your Style' -%}
{%- assign banner_button_text = section.settings.banner_button_text | default: 'Shop Now' -%}
{%- assign banner_button_url = section.settings.banner_button_url | default: collection.url -%}

<form id="collection-filters-form" method="GET" action="{{ collection.url }}" class="filter-form">
  <!-- Categories -->
  {% if show_collections %}
  <div class="widget-facet">
    <div class="facet-title text-xl fw-medium" data-bs-target="#collections" role="button" data-bs-toggle="collapse" aria-expanded="true" aria-controls="collections">
      <span>{{ section.settings.collections_title | default: 'Collections' }}</span>
      <span class="icon icon-arrow-up"></span>
    </div>
    <div id="collections" class="collapse show">
      <ul class="list-categories current-scrollbar">
        {% for collection in collections %}
          <ul class="collapse-body list-categories current-scrollbar">
            <li class="cate-item">
              <a class="text-sm link" href="{{ collection.url }}">
                <span>{{ collection.title }}</span>
                <span class="count">({{ collection.products_count }})</span>
              </a>
            </li>
          </ul>
        {% endfor %}
      </ul>
    </div>
  </div>
  {% endif %}

  <!-- Availability -->
  <div class="widget-facet">
    <div class="facet-title text-xl fw-medium" data-bs-target="#availability" role="button" data-bs-toggle="collapse" aria-expanded="true" aria-controls="availability">
      <span>Availability</span>
      <span class="icon icon-arrow-up"></span>
    </div>
    <div id="availability" class="collapse show">
      <ul class="collapse-body filter-group-check current-scrollbar">
        <li class="list-item">
          <input type="checkbox"
            name="filter.v.availability"
            value="1"
            id="Filter-availability-1"
            {% if current_tags contains 'filter.v.availability:1' %}checked{% endif %}
            class="filter-checkbox tf-check">
          <label for="Filter-availability-1" class="label">
            <span>In stock</span>
            <span class="count">({{ collection.products | where: "available", true | size }})</span>
          </label>
        </li>
        <li class="list-item">
          <input type="checkbox"
            name="filter.v.availability"
            value="0"
            id="Filter-availability-2"
            {% if current_tags contains 'filter.v.availability:0' %}checked{% endif %}
            class="filter-checkbox tf-check">
          <label for="Filter-availability-2" class="label">
            <span>Out of stock</span>
            <span class="count">({{ collection.products | where: "available", false | size }})</span>
          </label>
        </li>
      </ul>
    </div>
  </div>

  <!-- Shopify Search & Discovery Filters -->
  {%- for filter in collection.filters -%}
    {%- if filter.label != 'Availability' -%}
      <div class="widget-facet">
        <div class="facet-title text-xl fw-medium" data-bs-target="#filter-{{ filter.label | handle }}" role="button" data-bs-toggle="collapse" aria-expanded="true" aria-controls="filter-{{ filter.label | handle }}">
          <span>{{ filter.label }}</span>
          <span class="icon icon-arrow-up"></span>
        </div>
        <div id="filter-{{ filter.label | handle }}" class="collapse show">
          {%- case filter.type -%}
            {%- when 'boolean' or 'list' -%}
              <ul class="collapse-body filter-group-check current-scrollbar">
                {%- for filter_value in filter.values -%}
                  <li class="list-item">
                    <input type="checkbox"
                      name="{{ filter_value.param_name }}"
                      value="{{ filter_value.value }}"
                      id="Filter-{{ filter.label | escape }}-{{ forloop.index }}"
                      {% if filter_value.active -%}checked{%- endif %}
                      {% if filter_value.count == 0 and filter_value.active == false -%}disabled{%- endif %}
                      class="filter-checkbox tf-check">
                    <label for="Filter-{{ filter.label | escape }}-{{ forloop.index }}" class="label">
                      <span>{{ filter_value.label }}</span>
                      <span class="count">({{ filter_value.count }})</span>
                    </label>
                  </li>
                {%- endfor -%}
              </ul>
            {%- when 'price_range' -%}
              <div class="collapse-body widget-price filter-price">
                <span class="reset-price">Reset</span>
                <div class="price-val-range" id="price-value-range" 
                  data-min="{{ filter.min_value.value | default: 0 | money_without_currency | round }}"
                  data-max="{{ filter.max_value.value | default: filter.range_max | money_without_currency | round }}"
                  data-range-min="{{ filter.range_min | money_without_currency | round }}"
                  data-range-max="{{ filter.range_max | money_without_currency | round }}"></div>
                <div class="box-value-price">
                  <span class="text-sm">Price:</span>
                  <div class="price-box">
                    <div class="price-val" id="price-min-value" data-currency="{{ shop.currency.symbol }}">
                      {{ filter.min_value.value | default: 0 | money_without_currency | round }}
                    </div>
                    <span>-</span>
                    <div class="price-val" id="price-max-value" data-currency="{{ shop.currency.symbol }}">
                      {{ filter.max_value.value | default: filter.range_max | money_without_currency | round }}
                    </div>
                  </div>
                </div>
                <input type="hidden" name="filter.v.price.gte" id="price-min-input" value="{{ filter.min_value.value | default: 0 | money_without_currency | round }}">
                <input type="hidden" name="filter.v.price.lte" id="price-max-input" value="{{ filter.max_value.value | default: filter.range_max | money_without_currency | round }}">
              </div>
            {%- when 'size' -%}
              <div class="collapse-body filter-size-box flat-check-list">
                {% assign sizes = 'XS,S,M,L,XL' | split: ',' %}
                {% for size in sizes %}
                  {% assign size_count = 0 %}
                  {% for product in collection.products %}
                    {% for option in product.options_with_values %}
                      {% if option.name == 'Size' %}
                        {% if option.values contains size %}
                          {% assign size_count = size_count | plus: 1 %}
                        {% endif %}
                      {% endif %}
                    {% endfor %}
                  {% endfor %}
                  <div class="check-item size-item size-check">
                    <input type="checkbox"
                      name="filter.v.option.size"
                      value="{{ size }}"
                      id="Filter-size-{{ size }}"
                      {% assign size_tag = 'filter.v.option.size:' | append: size %}
                      {% if current_tags contains size_tag %}checked{% endif %}
                      class="filter-checkbox tf-check">
                    <label for="Filter-size-{{ size }}" class="label">
                      <span class="size">{{ size }}</span>
                      <span class="count">({{ size_count }})</span>
                    </label>
                  </div>
                {% endfor %}
              </div>
            {%- when 'brand' -%}
              <div class="collapse-body filter-group-check current-scrollbar">
                {% assign brands = 'Vineta,Zotac' | split: ',' %}
                {% for brand in brands %}
                  {% assign brand_count = 0 %}
                  {% for product in collection.products %}
                    {% if product.vendor == brand %}
                      {% assign brand_count = brand_count | plus: 1 %}
                    {% endif %}
                  {% endfor %}
                  <li class="list-item">
                    <input type="checkbox"
                      name="filter.v.option.brand"
                      value="{{ brand }}"
                      id="Filter-brand-{{ brand }}"
                      {% assign brand_tag = 'filter.v.option.brand:' | append: brand %}
                      {% if current_tags contains brand_tag %}checked{% endif %}
                      class="filter-checkbox tf-check">
                    <label for="Filter-brand-{{ brand }}" class="label">
                      <span>{{ brand }}</span>
                      <span class="count">({{ brand_count }})</span>
                    </label>
                  </li>
                {% endfor %}
              </div>
          {%- endcase -%}
        </div>
      </div>
    {%- endif -%}
  {%- endfor -%}

  <!-- Size -->
  <div class="widget-facet">
    <div class="facet-title text-xl fw-medium" data-bs-target="#size" role="button" data-bs-toggle="collapse" aria-expanded="true" aria-controls="size">
      <span>Size</span>
      <span class="icon icon-arrow-up"></span>
    </div>
    <div id="size" class="collapse show">
      <div class="collapse-body filter-size-box flat-check-list">
        {% assign sizes = 'XS,S,M,L,XL' | split: ',' %}
        {% for size in sizes %}
          {% assign size_count = 0 %}
          {% for product in collection.products %}
            {% for option in product.options_with_values %}
              {% if option.name == 'Size' %}
                {% if option.values contains size %}
                  {% assign size_count = size_count | plus: 1 %}
                {% endif %}
              {% endif %}
            {% endfor %}
          {% endfor %}
          <div class="check-item size-item size-check">
            <input type="checkbox"
              name="filter.v.option.size"
              value="{{ size }}"
              id="Filter-size-{{ size }}"
              {% assign size_tag = 'filter.v.option.size:' | append: size %}
              {% if current_tags contains size_tag %}checked{% endif %}
              class="filter-checkbox tf-check">
            <label for="Filter-size-{{ size }}" class="label">
              <span class="size">{{ size }}</span>
              <span class="count">({{ size_count }})</span>
            </label>
          </div>
        {% endfor %}
      </div>
    </div>
  </div>

  <!-- Brand -->
  <div class="widget-facet">
    <div class="facet-title text-xl fw-medium" data-bs-target="#brand" role="button" data-bs-toggle="collapse" aria-expanded="true" aria-controls="brand">
      <span>Brand</span>
      <span class="icon icon-arrow-up"></span>
    </div>
    <div id="brand" class="collapse show">
      <ul class="collapse-body filter-group-check current-scrollbar">
        {% assign brands = 'Vineta,Zotac' | split: ',' %}
        {% for brand in brands %}
          {% assign brand_count = 0 %}
          {% for product in collection.products %}
            {% if product.vendor == brand %}
              {% assign brand_count = brand_count | plus: 1 %}
            {% endif %}
          {% endfor %}
          <li class="list-item">
            <input type="checkbox"
              name="filter.v.option.brand"
              value="{{ brand }}"
              id="Filter-brand-{{ brand }}"
              {% assign brand_tag = 'filter.v.option.brand:' | append: brand %}
              {% if current_tags contains brand_tag %}checked{% endif %}
              class="filter-checkbox tf-check">
            <label for="Filter-brand-{{ brand }}" class="label">
              <span>{{ brand }}</span>
              <span class="count">({{ brand_count }})</span>
            </label>
          </li>
        {% endfor %}
      </ul>
    </div>
  </div>

  <!-- On Sale -->
  {% if show_on_sale %}
  <div class="widget-facet">
    <div class="facet-title text-xl fw-medium"><span>{{ section.settings.on_sale_title | default: 'On sale' }}</span></div>
    <ul class="collapse-body list-recent">
      {% for product in collection.products %}
        {% if product.compare_at_price > product.price %}
          <li>
            <div class="recent-blog-item">
              <a href="{{ product.url }}" class="img-product">
                <img src="{{ product.featured_image | img_url: 'small' }}" alt="{{ product.title | escape }}" width="100" height="100">
              </a>
              <div class="content">
                <a href="{{ product.url }}" class="title text-md link fw-medium">{{ product.title }}</a>
                <div class="price text-md fw-medium">
                  <span class="new-price">{{ product.price | money }}</span>
                  <span class="old-price">{{ product.compare_at_price | money }}</span>
                </div>
              </div>
            </div>
          </li>
        {% endif %}
      {% endfor %}
    </ul>
  </div>
  {% endif %}

  <!-- Banner -->
  {% if show_banner and section.settings.filter_banner != blank %}
  <div class="widget-facet">
    <div class="sb-banner hover-img">
      <div class="image img-style">
        <img src="{{ section.settings.filter_banner | img_url: 'master' }}" 
             data-src="{{ section.settings.filter_banner | img_url: 'master' }}" 
             alt="{{ section.settings.filter_banner.alt | escape }}" 
             class="lazyload"
             width="{{ section.settings.filter_banner.width }}"
             height="{{ section.settings.filter_banner.height }}">
      </div>
      <div class="banner-content">
        <p class="title">
          {{ banner_title | newline_to_br }}
        </p>
        <a href="{{ banner_button_url }}" class="tf-btn btn-white hover-primary">{{ banner_button_text }}</a>
      </div>
    </div>
  </div>
  {% endif %}
</form>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterForm = document.getElementById('collection-filters-form');
    const filterCheckboxes = document.querySelectorAll('.filter-checkbox');
    const priceRange = document.getElementById('price-value-range');
    const priceMinInput = document.getElementById('price-min-input');
    const priceMaxInput = document.getElementById('price-max-input');
    const resetPriceBtn = document.querySelector('.reset-price');
    const productGrid = document.querySelector('.tf-grid-layout');
    const productList = document.querySelector('.tf-list-layout');
    const appliedFilters = document.getElementById('applied-filters');
    const removeAllBtn = document.getElementById('remove-all');

    // Function to update URL without reload
    function updateURL(params) {
      const url = new URL(window.location.href);
      for (const [key, value] of Object.entries(params)) {
        if (value) {
          url.searchParams.set(key, value);
        } else {
          url.searchParams.delete(key);
        }
      }
      window.history.pushState({}, '', url.toString());
    }

    // Function to update product grid
    async function updateProducts() {
      const formData = new FormData(filterForm);
      const params = new URLSearchParams(formData);
      const url = `${filterForm.action}?${params.toString()}`;

      try {
        const response = await fetch(url);
        const html = await response.text();
        const parser = new DOMParser();
        const doc = parser.parseFromString(html, 'text/html');

        // Update product grids
        const newGrid = doc.querySelector('.tf-grid-layout');
        const newList = doc.querySelector('.tf-list-layout');
        if (newGrid && productGrid) productGrid.innerHTML = newGrid.innerHTML;
        if (newList && productList) productList.innerHTML = newList.innerHTML;

        // Update applied filters
        const newAppliedFilters = doc.getElementById('applied-filters');
        if (newAppliedFilters && appliedFilters) {
          appliedFilters.innerHTML = newAppliedFilters.innerHTML;
        }

        // Update remove all button
        const newRemoveAll = doc.getElementById('remove-all');
        if (newRemoveAll && removeAllBtn) {
          removeAllBtn.style.display = newRemoveAll ? 'block' : 'none';
        }

        // Update URL
        updateURL(Object.fromEntries(params));

        // Reinitialize any necessary event listeners
        initializeProductEvents();
      } catch (error) {
        console.error('Error updating products:', error);
      }
    }

    // Function to initialize product-specific event listeners
    function initializeProductEvents() {
      // Add any product-specific event listeners here
      // For example, quick view, add to cart, etc.
    }

    // Handle checkbox changes
    filterCheckboxes.forEach(checkbox => {
      checkbox.addEventListener('change', function() {
        updateProducts();
      });
    });

    // Handle price range changes
    if (priceRange && priceMinInput && priceMaxInput) {
      const minPrice = parseInt(priceRange.dataset.min);
      const maxPrice = parseInt(priceRange.dataset.max);
      const rangeMin = parseInt(priceRange.dataset.rangeMin);
      const rangeMax = parseInt(priceRange.dataset.rangeMax);
      
      noUiSlider.create(priceRange, {
        start: [minPrice, maxPrice],
        connect: true,
        range: {
          'min': rangeMin,
          'max': rangeMax
        }
      });

      priceRange.noUiSlider.on('update', function(values) {
        const minValue = Math.round(values[0]);
        const maxValue = Math.round(values[1]);
        
        // Update hidden inputs
        priceMinInput.value = minValue;
        priceMaxInput.value = maxValue;
        
        // Update displayed values
        const minDisplay = document.getElementById('price-min-value');
        const maxDisplay = document.getElementById('price-max-value');
        const currency = minDisplay.dataset.currency;
        
        if (minDisplay) minDisplay.textContent = minValue;
        if (maxDisplay) maxDisplay.textContent = maxValue;
      });

      priceRange.noUiSlider.on('change', function() {
        updateProducts();
      });

      // Handle price reset
      if (resetPriceBtn) {
        resetPriceBtn.addEventListener('click', function() {
          priceRange.noUiSlider.reset();
          updateProducts();
        });
      }
    }

    // Handle filter tag removal
    document.addEventListener('click', function(e) {
      if (e.target.closest('.filter-tag')) {
        const tag = e.target.closest('.filter-tag');
        const tagText = tag.textContent.trim();
        const url = new URL(window.location.href);
        const tags = url.searchParams.get('filter.v.tag')?.split(',') || [];
        const newTags = tags.filter(t => t !== tagText);
        
        if (newTags.length > 0) {
          url.searchParams.set('filter.v.tag', newTags.join(','));
        } else {
          url.searchParams.delete('filter.v.tag');
        }
        
        updateProducts();
      }
    });

    // Handle clear all filters
    if (removeAllBtn) {
      removeAllBtn.addEventListener('click', function() {
        const url = new URL(window.location.href);
        // Remove all filter parameters
        for (const param of url.searchParams.keys()) {
          if (param.startsWith('filter.v.')) {
            url.searchParams.delete(param);
          }
        }
        updateProducts();
      });
    }

    // Initialize product events
    initializeProductEvents();
  });
</script>

{% render 'filter-content' %}

{% schema %}
{
  "name": "Filter Content",
  "templates": ["collection"],
  "settings": [
    {
      "type": "header",
      "content": "Collections Section"
    },
    {
      "type": "checkbox",
      "id": "show_collections",
      "label": "Show Collections",
      "default": true
    },
    {
      "type": "text",
      "id": "collections_title",
      "label": "Collections Title",
      "default": "Collections"
    },
    {
      "type": "header",
      "content": "On Sale Section"
    },
    {
      "type": "checkbox",
      "id": "show_on_sale",
      "label": "Show On Sale Section",
      "default": true
    },
    {
      "type": "text",
      "id": "on_sale_title",
      "label": "On Sale Title",
      "default": "On sale"
    },
    {
      "type": "header",
      "content": "Banner Section"
    },
    {
      "type": "checkbox",
      "id": "show_banner",
      "label": "Show Banner",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "filter_banner",
      "label": "Banner Image"
    },
    {
      "type": "text",
      "id": "banner_title",
      "label": "Banner Title",
      "default": "Elevate\nYour Style"
    },
    {
      "type": "text",
      "id": "banner_button_text",
      "label": "Button Text",
      "default": "Shop Now"
    },
    {
      "type": "url",
      "id": "banner_button_url",
      "label": "Button Link"
    }
  ]
}
{% endschema %} 