{% schema %}
{
  "name": "Cookie Banner",
  "settings": [
    {
      "type": "checkbox",
      "id": "enable_cookie_banner",
      "label": "Enable Cookie Banner",
      "default": true
    },
    {
      "type": "url",
      "id": "privacy_link",
      "label": "Privacy Policy Link"
    },
    {
      "type": "select",
      "id": "expiry_days",
      "label": "Cookie Expiry (Days)",
      "options": [
        {
          "value": "1",
          "label": "1 day"
        },
        {
          "value": "7",
          "label": "7 days"
        },
        {
          "value": "30",
          "label": "30 days"
        },
        {
          "value": "365",
          "label": "1 year"
        }
      ],
      "default": "30"
    }
  ],
  "presets": [
    {
      "name": "Cookie Banner",
      "category": "Popup"
    }
  ]
}
{% endschema %}

{% if section.settings.enable_cookie_banner %}
  <div class="cookie-banner sys-cookies" id="cookie-banner" style="display: none;" 
       data-configs='{"day_next": "{{ section.settings.expiry_days }}", "show": "1"}'
       data-section-id="{{ section.id }}">
    <div class="overplay"></div>
    <div class="content" id="drawerCookies">
      <p class="text-md">{{ 'cookie.message' | t }}</p>
      <div class="button-group">
        {% if section.settings.privacy_link %}
          <a class="btn-out-line-white btn-submit-total tf-btn" href="{{ section.settings.privacy_link }}">
            {{ 'cookie.privacy_button' | t }}
          </a>
        {% endif %}
        <button id="accept-cookie" class="accept-button btn-out-line-white btn-submit-total tf-btn hdt-pp_cookies__accept-btn">
          {{ 'cookie.accept_button' | t }}
        </button>
        <button id="decline-cookie" class="btn-out-line-white btn-submit-total tf-btn hdt-pp_cookies__decline-btn">
          {{ 'cookie.decline_button' | t }}
        </button>
      </div>
    </div>
  </div>
{% endif %}

{% javascript %}
console.log('Cookie banner script loaded');

// Global cookie functions
function getCookie(name) {
  const value = `; ${document.cookie}`;
  const parts = value.split(`; ${name}=`);
  if (parts.length === 2) return parts.pop().split(';').shift();
}

function setCookie(name, value, days) {
  const date = new Date();
  date.setTime(date.getTime() + (days * 24 * 60 * 60 * 1000));
  const expires = `expires=${date.toUTCString()}`;
  document.cookie = `${name}=${value};${expires};path=/;SameSite=Lax`;
}

// Initialize cookie banner when DOM is ready
function initCookieBanner() {
  console.log('Initializing cookie banner');
  const banner = document.querySelector('.sys-cookies');
  if (!banner) {
    console.log('No cookie banner found');
    return;
  }
  
  console.log('Found cookie banner:', banner);
  
  // Check if we're in theme customizer mode
  const isThemeCustomizer = window.Shopify && window.Shopify.designMode;
  
  if (isThemeCustomizer) {
    // Get section ID from data attribute
    const sectionId = banner.getAttribute('data-section-id');
    
    // Handle theme customizer section selection
    document.addEventListener('shopify:section:select', function(event) {
      if (event.detail.sectionId === sectionId) {
        // Show banner when this section is selected
        banner.style.display = 'block';
        console.log('Showing cookie banner - section selected');
      }
    });

    // Listen for section deselection events
    document.addEventListener('shopify:section:deselect', function(event) {
      if (event.detail.sectionId === sectionId) {
        // Hide banner when this section is deselected
        banner.style.display = 'none';
        console.log('Hiding cookie banner - section deselected');
      }
    });

    // Initially hide the banner in customizer mode
    banner.style.display = 'none';
    console.log('Cookie banner hidden initially in theme customizer mode');
  } else {
    // Check if cookie banner should be shown (not in customizer)
    const cookieConsent = getCookie('theme4:cookies');
    if (cookieConsent) {
      banner.style.display = 'none';
      console.log('Cookie banner hidden due to existing consent:', cookieConsent);
      return;
    } else {
      banner.style.display = 'block';
      console.log('Showing cookie banner - no consent found');
    }
  }
  
  const acceptBtn = banner.querySelector('#accept-cookie');
  const declineBtn = banner.querySelector('#decline-cookie');
  
  console.log('Accept button:', acceptBtn);
  console.log('Decline button:', declineBtn);
  
  if (acceptBtn) {
    acceptBtn.addEventListener('click', function() {
      console.log('Accept button clicked via direct listener');
      handleAccept();
    });
  }
  
  if (declineBtn) {
    declineBtn.addEventListener('click', function() {
      console.log('Decline button clicked via direct listener');
      handleDecline();
    });
  }
  
  // Also add event delegation
  banner.addEventListener('click', function(event) {
    console.log('Click event on banner:', event.target);
    if (event.target.id === 'accept-cookie' || event.target.classList.contains('hdt-pp_cookies__accept-btn')) {
      console.log('Accept clicked via delegation');
      handleAccept();
    } else if (event.target.id === 'decline-cookie' || event.target.classList.contains('hdt-pp_cookies__decline-btn')) {
      console.log('Decline clicked via delegation');
      handleDecline();
    }
  });
}

function handleAccept() {
  console.log('Accept button clicked');
  const banner = document.querySelector('.sys-cookies');
  const isThemeCustomizer = window.Shopify && window.Shopify.designMode;
  
  if (banner && !isThemeCustomizer) {
    banner.style.display = 'none';
  }
  
  // Only set cookie if not in theme customizer
  if (!isThemeCustomizer) {
    const configs = JSON.parse(banner.getAttribute('data-configs') || '{}');
    setCookie('theme4:cookies', 'accepted', parseInt(configs.day_next || 30));
    
    // Set tracking consent if Shopify API is available
    if (window.Shopify && window.Shopify.customerPrivacy) {
      try {
        window.Shopify.customerPrivacy.setTrackingConsent(true);
      } catch (error) {
        console.error('Error setting tracking consent:', error);
      }
    }
  }
}

function handleDecline() {
  console.log('Decline button clicked');
  const banner = document.querySelector('.sys-cookies');
  const isThemeCustomizer = window.Shopify && window.Shopify.designMode;
  
  if (banner && !isThemeCustomizer) {
    banner.style.display = 'none';
  }
  
  // Only set cookie if not in theme customizer
  if (!isThemeCustomizer) {
    const configs = JSON.parse(banner.getAttribute('data-configs') || '{}');
    setCookie('theme4:cookies', 'declined', parseInt(configs.day_next || 30));
    
    // Set tracking consent if Shopify API is available
    if (window.Shopify && window.Shopify.customerPrivacy) {
      try {
        window.Shopify.customerPrivacy.setTrackingConsent(false);
      } catch (error) {
        console.error('Error setting tracking consent:', error);
      }
    }
  }
}

// Initialize when DOM is ready
if (document.readyState === 'loading') {
  document.addEventListener('DOMContentLoaded', initCookieBanner);
} else {
  initCookieBanner();
}
{% endjavascript %}