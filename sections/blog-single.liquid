{% schema %}
{
  "name": "Blog Single",
  "settings": [
    {
      "type": "select",
      "id": "width",
      "label": "Section width",
      "options": [
        {
          "value": "full",
          "label": "Full width"
        },
        {
          "value": "boxed",
          "label": "Boxed"
        }
      ],
      "default": "boxed"
    },
    {
      "type": "header",
      "content": "Display Settings"
    },
    {
      "type": "checkbox",
      "id": "show_tags",
      "label": "Show Tags",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_author",
      "label": "Show Author",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_date",
      "label": "Show Date",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_comments",
      "label": "Show Comments",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_social_sharing",
      "label": "Show Social Sharing",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_related_posts",
      "label": "Show Previous/Next Posts",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "show_comment_form",
      "label": "Show Comment Form",
      "default": true
    }
  ],
  "presets": [
    {
      "name": "Blog Single",
      "category": "Blog"
    }
  ]
}
{% endschema %}

<section class="s-blog-single line-bottom-container">
  {% if section.settings.width == 'boxed' %}
    <div class="container">
  {% endif %}
    <div class="heading blog-post-item">
      {%- if section.settings.show_tags -%}
        <div class="entry-tag">
          <ul class="style-list">
            <li>
              <a style="font-size: 14px;" href="#" class="type-life">
                {{ article.tags.first }}
              </a>
            </li>
          </ul>
        </div>
      {%- endif -%}
      <p class="entry_title display-sm fw-medium">
        {{ article.title }}
      </p>
      <ul class="entry-meta">
        {%- if section.settings.show_author -%}
          <li class="entry_author">
            <div class="avatar">
              {% if article.author.image %}
                {{ article.author.image | image_url: width: 100 | image_tag: loading: 'lazy', class: 'lazyload' }}
              {% else %}
                <img src="{{ 'blog-author-1.jpg' | asset_url }}" 
                     data-src="{{ 'blog-author-1.jpg' | asset_url }}"
                     loading="lazy"
                     class="lazyload"
                     alt="{{ article.author }}"
                     width="50"
                     height="50">
              {% endif %}
            </div>
            <p class="entry_name">
              {{ 'blog.post_by' | t }} <span class="fw-medium">{{ article.author }}</span>
            </p>
          </li>
          <li class="br-line"></li>
        {%- endif -%}
        {%- if section.settings.show_date -%}
          <li class="entry_date">
            <p class="text-md">
              {{ article.published_at | date: "%b %d %Y" }}
            </p>
          </li>
          <li class="br-line"></li>
        {%- endif -%}
        {%- if section.settings.show_comments -%}
          <li class="entry_comment">
            <p class="text-md">
              {{ article.comments_count }} {{ 'blog.comments' | t }}
            </p>
          </li>
        {%- endif -%}
      </ul>
    </div>
    <div class="content">
      {{ article.content }}

      <div class="bot">
        {%- if section.settings.show_tags -%}
          <div class="entry-tag">
            <p>{{ 'blog.tag_label' | t }}:</p>
            <ul class="style-list">
              {% for tag in article.tags %}
                <li>
                  <a style="font-size: 14px;" href="{{ blog.url }}/tagged/{{ tag | handle }}">{{ tag }}</a>
                </li>
              {% endfor %}
            </ul>
          </div>
        {%- endif -%}
        {%- if section.settings.show_social_sharing -%}
          <div class="entry-social">
            <p>{{ 'blog.share_label' | t }}:</p>
            <ul class="tf-social-icon style-large">
              <li>
                <a href="https://www.facebook.com/sharer/sharer.php?u={{ shop.url | append: article.url }}" class="social-item social-facebook">
                  <i class="icon icon-fb"></i>
                </a>
              </li>
              <li>
                <a href="https://www.instagram.com/" class="social-item social-instagram">
                  <i class="icon icon-instagram"></i>
                </a>
              </li>
              <li>
                <a href="https://twitter.com/intent/tweet?url={{ shop.url | append: article.url }}&text={{ article.title }}" class="social-item social-x">
                  <i class="icon icon-x"></i>
                </a>
              </li>
              <li>
                <a href="https://www.snapchat.com/" class="social-item social-snapchat">
                  <i class="icon icon-snapchat"></i>
                </a>
              </li>
            </ul>
          </div>
        {%- endif -%}
      </div>

      {%- if section.settings.show_related_posts -%}
        <div class="related-post">
            <a href="{{ blog.previous_article.url }}" class="post prev">
              {% if blog.previous_article %}

              <div class="icon">
                <i class="icon-arr-left"></i>
              </div>
              <div class="text-wrap-left">
                <p>{{ 'blog.previous_post' | t }}</p>
                <p class="name-post">{{ blog.previous_article.title }}</p>
              </div>
            {% endif %}
            </a>
            <a href="{{ blog.next_article.url }}" class="post next">
              {% if blog.next_article %}
              <div class="text-wrap-right">
                <p>{{ 'blog.next_post' | t }}</p>
                <p class="name-post">{{ blog.next_article.title }}</p>
              </div>
              <div class="icon">
                <i class="icon-arr-right2"></i>
              </div>
            {% endif %}
            </a>
        </div>
      {%- endif -%}
    </div>

    {%- if section.settings.show_comment_form -%}
      <div class="leave-comment-wrap">
        <p class="title">{{ 'blog.leave_comment' | t }}</p>
        
        {%- if article.comments_enabled? -%}
          {%- if comment and comment.created_at -%}
            <div class="comment-success" style="background: #d4edda; color: #155724; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
              <p>{{ 'blog.comment_success_moderated' | t }}</p>
            </div>
          {%- endif -%}

          {%- if comment.errors -%}
            <div class="comment-errors" style="background: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin-bottom: 20px;">
              <p>{{ 'blog.comment_error_message' | t }}</p>
              <ul>
                {%- for error in comment.errors -%}
                  <li>{{ error }}</li>
                {%- endfor -%}
              </ul>
            </div>
          {%- endif -%}

          {% form 'new_comment', article, class: 'form-default' %}
            <div class="wrap">
              <div class="cols">
                <fieldset>
                  <label for="CommentAuthor">{{ 'blog.comment_name' | t }}*</label>
                  <input id="CommentAuthor" type="text" name="comment[author]" value="{{ form.author }}" required>
                </fieldset>
                <fieldset>
                  <label for="CommentEmail">{{ 'blog.comment_email' | t }}*</label>
                  <input id="CommentEmail" type="email" name="comment[email]" value="{{ form.email }}" required>
                </fieldset>
              </div>
              <div class="cols">
                <fieldset class="textarea">
                  <label for="CommentBody">{{ 'blog.comment_message' | t }}*</label>
                  <textarea id="CommentBody" name="comment[body]" required>{{ form.body }}</textarea>
                </fieldset>
              </div>
              <p style="font-size: 14px;" class="notice">{{ 'blog.comment_email_notice' | t }}</p>
              <div class="button-submit">
                                  <button class="tf-btn text-sm animate-btn" type="submit">{{ 'blog.comment_post' | t }}</button>
              </div>
            </div>
          {% endform %}
        {%- else -%}
          <div class="comments-disabled" style="background: #e2e3e5; color: #383d41; padding: 15px; border-radius: 5px;">
            <p>{{ 'blog.comments_disabled' | t }}</p>
          </div>
        {%- endif -%}
      </div>
    {%- endif -%}
  {% if section.settings.width == 'boxed' %}
  </div>
  {% endif %}
</section>

<script>
document.addEventListener('DOMContentLoaded', function() {
  // Auto-hide existing success/error messages after 5 seconds
  const existingMessages = document.querySelectorAll('.comment-success, .comment-errors');
  existingMessages.forEach(msg => {
    setTimeout(() => {
      msg.style.transition = 'opacity 0.5s ease-out';
      msg.style.opacity = '0';
      setTimeout(() => msg.remove(), 500);
    }, 5000);
  });

  // Clear messages from URL parameters on page load
  if (window.location.search.includes('comment_posted') || window.location.search.includes('comment_error')) {
    // Remove the parameters from URL without reloading
    const newUrl = window.location.pathname + window.location.hash;
    window.history.replaceState({}, document.title, newUrl);
  }

  const commentForm = document.querySelector('.form-default');
  if (!commentForm) return;

  commentForm.addEventListener('submit', function(e) {
    e.preventDefault();
    
    const formData = new FormData(this);
    const submitButton = this.querySelector('button[type="submit"]');
    const originalText = submitButton.textContent;
    
    // Disable submit button and show loading
    submitButton.disabled = true;
    submitButton.textContent = 'Submitting...';
    
    // Remove any existing messages
    const existingMessages = document.querySelectorAll('.comment-success, .comment-errors');
    existingMessages.forEach(msg => msg.remove());
    
    fetch(window.location.href, {
      method: 'POST',
      body: formData,
      headers: {
        'X-Requested-With': 'XMLHttpRequest'
      }
    })
    .then(response => response.text())
    .then(html => {
      // Create a temporary div to parse the response
      const tempDiv = document.createElement('div');
      tempDiv.innerHTML = html;
      
      // Check for success message
      const successMsg = tempDiv.querySelector('.comment-success');
      if (successMsg) {
        // Insert success message before the form
        const clonedMsg = successMsg.cloneNode(true);
        commentForm.parentNode.insertBefore(clonedMsg, commentForm);
        // Clear the form
        commentForm.reset();
        // Auto-hide after 5 seconds
        setTimeout(() => {
          clonedMsg.style.transition = 'opacity 0.5s ease-out';
          clonedMsg.style.opacity = '0';
          setTimeout(() => clonedMsg.remove(), 500);
        }, 5000);
      }
      
      // Check for error messages
      const errorMsg = tempDiv.querySelector('.comment-errors');
      if (errorMsg) {
        // Insert error message before the form
        const clonedMsg = errorMsg.cloneNode(true);
        commentForm.parentNode.insertBefore(clonedMsg, commentForm);
        // Auto-hide after 8 seconds (longer for errors)
        setTimeout(() => {
          clonedMsg.style.transition = 'opacity 0.5s ease-out';
          clonedMsg.style.opacity = '0';
          setTimeout(() => clonedMsg.remove(), 500);
        }, 8000);
      }
      
      // If no success or error message, check if there are validation errors
      if (!successMsg && !errorMsg) {
        const formErrors = tempDiv.querySelectorAll('.field-error, .error');
        if (formErrors.length > 0) {
          const errorDiv = document.createElement('div');
          errorDiv.className = 'comment-errors';
          errorDiv.style.cssText = 'background: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin-bottom: 20px;';
          errorDiv.innerHTML = '<p>There was an error submitting your comment:</p><ul><li>Please check your input and try again.</li></ul>';
          commentForm.parentNode.insertBefore(errorDiv, commentForm);
          // Auto-hide after 8 seconds
          setTimeout(() => {
            errorDiv.style.transition = 'opacity 0.5s ease-out';
            errorDiv.style.opacity = '0';
            setTimeout(() => errorDiv.remove(), 500);
          }, 8000);
        }
      }
    })
    .catch(error => {
      console.error('Error:', error);
      const errorDiv = document.createElement('div');
      errorDiv.className = 'comment-errors';
      errorDiv.style.cssText = 'background: #f8d7da; color: #721c24; padding: 15px; border-radius: 5px; margin-bottom: 20px;';
      errorDiv.innerHTML = '<p>There was an error submitting your comment. Please try again.</p>';
      commentForm.parentNode.insertBefore(errorDiv, commentForm);
      // Auto-hide after 8 seconds
      setTimeout(() => {
        errorDiv.style.transition = 'opacity 0.5s ease-out';
        errorDiv.style.opacity = '0';
        setTimeout(() => errorDiv.remove(), 500);
      }, 8000);
    })
    .finally(() => {
      // Re-enable submit button
      submitButton.disabled = false;
      submitButton.textContent = originalText;
    });
  });
});
</script> 