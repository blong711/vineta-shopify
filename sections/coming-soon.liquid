{% schema %}
{
  "name": "Coming Soon",
  "settings": [
    {
      "type": "select",
      "id": "width",
      "label": "Section width",
      "options": [
        {
          "value": "full",
          "label": "Full width"
        },
        {
          "value": "boxed",
          "label": "Boxed"
        }
      ],
      "default": "boxed"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Coming Soon!"
    },
    {
      "type": "text",
      "id": "subtitle",
      "label": "Subtitle",
      "default": "We couldn't find the page you were looking for. We suggest you return to homepage"
    },
    {
      "type": "text",
      "id": "countdown_date",
      "label": "Countdown Date",
      "info": "Format: YYYY-MM-DD HH:mm:ss",
      "default": "2024-12-31 23:59:59"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Return to Homepage"
    },
    {
      "type": "text",
      "id": "email_placeholder",
      "label": "Email Input Placeholder",
      "default": "Your email address"
    },
    {
      "type": "text",
      "id": "submit_button_text",
      "label": "Submit Button Text",
      "default": "Get Notify"
    }
  ],
  "presets": [
    {
      "name": "Coming Soon",
      "category": "Page"
    }
  ]
}
{% endschema %}

<section class="s-coming-soon">
  {% if section.settings.width == 'boxed' %}
    <div class="container">
  {% endif %}
    <div class="row">
      <div class="col-lg-12">
        <div class="wg-coming-soon">
          <p class="display-xl-2 title text-center">
            {{ section.settings.title }}
          </p>
          <p class="text-md sub text-main text-center" style="max-width: 480px">
            {{ section.settings.subtitle }}
          </p>
          <div class="wg-countdown">
            <span class="js-countdown" data-countdown="{{ section.settings.countdown_date }}" data-labels="Days,Hours,Mins,Secs"></span>
          </div>
          <div class="form-email-wrap">
            <form action="#" class="form-newsletter" method="post" accept-charset="utf-8" data-mailchimp="true">
              <div class="subscribe-content">
                <fieldset class="email">
                  <input type="email" 
                         name="email-form" 
                         class="subscribe-email"
                         placeholder="{{ section.settings.email_placeholder }}" 
                         tabindex="0" 
                         aria-required="true"
                         required>
                </fieldset>
                <div class="button-submit">
                  <button class="subscribe-button text-sm style-small tf-btn animate-btn" type="submit">
                    {{ section.settings.submit_button_text }}
                  </button>
                </div>
              </div>
            </form>
            <div id="coming-soon-submit-message" class="coming-soon-submit-message" style="margin-top: 15px; color: #28a745; font-size: 14px; display: none; text-align: center;">
              Thank you! You've been successfully added to our notification list.
            </div>
          </div>
          <div class="bot">
            <a href="{{ routes.root_url }}" class="tf-btn btn-fill hover-primary animate-btn">
              {{ section.settings.button_text }}
            </a>
          </div>
        </div>
      </div>
    </div>
  {% if section.settings.width == 'boxed' %}
    </div>
  {% endif %}
</section>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const comingSoonForm = document.querySelector('.s-coming-soon .form-newsletter');
    const successMessage = document.getElementById('coming-soon-submit-message');
    
    if (comingSoonForm) {
      comingSoonForm.addEventListener('submit', function(e) {
        e.preventDefault();
        
        const emailInput = this.querySelector('input[type="email"]');
        const submitButton = this.querySelector('button[type="submit"]');
        const email = emailInput.value;
        
        // Basic email validation
        if (!email || !email.includes('@')) {
          alert('Please enter a valid email address.');
          return;
        }
        
        // Disable submit button and show loading state
        submitButton.disabled = true;
        const originalText = submitButton.textContent;
        submitButton.textContent = 'Submitting...';
        
        // Simulate form submission (you can replace this with actual API call)
        setTimeout(() => {
          // Hide the form
          this.style.display = 'none';
          
          // Show success message
          if (successMessage) {
            successMessage.style.display = 'block';
          }
          
          // Reset the form
          this.reset();
          
          // Re-enable button (in case form is shown again)
          submitButton.disabled = false;
          submitButton.textContent = originalText;
          
          // Optional: Auto-hide success message after 5 seconds
          setTimeout(() => {
            if (successMessage) {
              successMessage.style.transition = 'opacity 0.5s ease-out';
              successMessage.style.opacity = '0';
              setTimeout(() => {
                successMessage.style.display = 'none';
                successMessage.style.opacity = '1';
              }, 500);
            }
          }, 5000);
          
        }, 1000); // Simulate 1 second delay
      });
    }
  });
</script>